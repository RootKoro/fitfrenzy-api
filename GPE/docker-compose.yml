version: '3.8'
services:
  lb:
      image: haproxy:2.2
      restart: always
      ports:
          - "3005:3005"
      volumes:
          - ./haproxy:/usr/local/etc/haproxy
      deploy:
          resources:
              limits:
                  memory: 2048M
      container_name: Haproxy
  mongodb:
    image: mongo:latest
    env_file:
      - .env
    ports:
      - 27017:27017
    volumes:
      - mongodb_data_container:/data/db

  # remove in production
  mongo-express:
    image: mongo-express
    container_name: mongoexpress
    environment:
        - ME_CONFIG_MONGODB_ADMINUSERNAME=root
        - ME_CONFIG_MONGODB_ADMINPASSWORD=password
        - ME_CONFIG_MONGODB_URL=mongodb://mongodb:27017/BeMotivated
        - ME_CONFIG_BASICAUTH_USERNAME=root
        - ME_CONFIG_BASICAUTH_PASSWORD=password
    links:
        - mongodb
    restart: unless-stopped
    ports:
        - 8081:8081

  fitfrenzy_frontend:
    container_name: fitfrenzy_front
    build:
      context: ./new-fitfrenzy
      args:
        - NODE_ENV=development
    environment:
      - NODE_ENV=development
    tty: true
    ports:
      - '19006:19006'
      - '19001:19001'
      - '19002:19002'
    volumes:
      - ./new-fitfrenzy:/fitfrenzy/app:delegated
      - ./new-fitfrenzy/package.json:/fitfrenzy/package.json
      - ./new-fitfrenzy/package-lock.json:/fitfrenzy/package-lock.json
    healthcheck:
      disable: true

  users_api:
    container_name: users
    build:
        context: .
        target: development
        dockerfile: users/Dockerfile
    volumes:
      - ./users:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 3000:3000
    command: npm run start:dev
    env_file:
      - users/.env
    depends_on:
      - mongodb

  sports_api:
    container_name: sports
    build:
        context: .
        target: development
        dockerfile: sports/Dockerfile
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - 3333:3333
    command: npm run start:dev
    env_file:
      - sports/.env
    depends_on:
      - mongodb

  statistiques_api:
    container_name: statistiques
    build:
        context: .
        target: development
        dockerfile: statistiques/Dockerfile
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - 3334:3334
    command: npm run start:dev
    env_file:
      - statistiques/.env
    depends_on:
      - mongodb

  questionary_api:
    container_name: questionary
    build:
        context: .
        target: development
        dockerfile: questionary/Dockerfile
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - 3335:3335
    command: npm run start:dev
    env_file:
      - questionary/.env
    depends_on:
      - mongodb

  sport_program_api:
    container_name: sport-program
    build:
        context: .
        target: development
        dockerfile: sport-program/Dockerfile
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - 3336:3336
    command: npm run start:dev
    env_file:
      - sport-program/.env
    depends_on:
      - mongodb

volumes:
  mongodb_data_container:
