version: '3.8'
services:
  lb:
      image: haproxy:2.2
      restart: always
      ports:
          - "3005:3005"
      volumes:
          - ./haproxy:/usr/local/etc/haproxy
      deploy:
          resources:
              limits:
                  memory: 2048M
      container_name: Haproxy

  mongodb:
    image: mongo:latest
    container_name: fitfrenzy-db
    restart: always
    volumes:
      - ./database/db:/data/db
    networks:
      - mongo-network

  # remove in production
  mongo-express:
    image: mongo-express:latest
    container_name: mongoexpress
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://mongodb:27017
      ME_CONFIG_BASICAUTH_USERNAME: root
      ME_CONFIG_BASICAUTH_PASSWORD: password
    links:
      - mongodb
    restart: always
    ports:
      - 8081:8081
    networks:
      - mongo-network
    
  users_api:
    container_name: users
    build:
        context: .
        target: development
        dockerfile: users/Dockerfile
    volumes:
      - ./users:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped
    ports:
      - 3000:3000
    command: npm run start
    env_file:
      - users/.env
    networks:
      - mongo-network
    depends_on:
      - mongodb

  sports_api:
    container_name: sports
    build:
        context: .
        target: development
        dockerfile: sports/Dockerfile
    volumes:
      - .:/app
      - /app/node_modules
    restart: unless-stopped
    ports:
      - 3333:3333
    command: npm run start:dev
    env_file:
      - sports/.env
    networks:
      - mongo-network
    depends_on:
      - mongodb

  statistiques_api:
    container_name: statistiques
    build:
        context: .
        target: development
        dockerfile: statistiques/Dockerfile
    volumes:
      - .:/app
      - /app/node_modules
    restart: unless-stopped
    ports:
      - 3334:3334
    command: npm run start:dev
    env_file:
      - statistiques/.env
    networks:
      - mongo-network
    depends_on:
      - mongodb

  questionary_api:
    container_name: questionary
    build:
        context: .
        target: development
        dockerfile: questionary/Dockerfile
    volumes:
      - .:/app
      - /app/node_modules
    restart: unless-stopped
    ports:
      - 3335:3335
    command: npm run start:dev
    env_file:
      - questionary/.env
    networks:
      - mongo-network
    depends_on:
      - mongodb

  sport_program_api:
    container_name: sport-program
    build:
        context: .
        target: development
        dockerfile: sport-program/Dockerfile
    volumes:
      - .:/app
      - /app/node_modules
    restart: unless-stopped
    ports:
      - 3336:3336
    command: npm run start:dev
    env_file:
      - sport-program/.env
    networks:
      - mongo-network
    depends_on:
      - mongodb

volumes:
  mongodb_data_container:
    driver: local
    driver_opts:
      type: none
      device: database/db
      o: bind
  users_volume:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./users/src
  questionaries_volume:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./questionary/src
  sports_volume:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./sports/src
  statistiques_volume:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./statistiques/src
  programs_volume:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./sport-program/src

networks:
  mongo-network:
    driver: bridge
# expo_node_modules: {}
